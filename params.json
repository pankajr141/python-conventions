{"name":"Python-conventions","tagline":"Module will add coding coventions to the code along with additional function like getter setter","body":"Module focus on forcing some python conventions to the programm. Its can be used to make your programm better.\r\nHere we are using metaclasses to change the overall properties of a class\r\n\r\n### Installation\r\n```shell\r\npip install conventions\r\n```\r\n\r\n### Current Features\r\n* Automatically ad getter and setter \r\n* Convert function name to lower_case (seprated by _)\r\n* Convert variable name to lower_case (seprated by _)\r\n* Convert variable starting with const_ to UPPERCASE\r\n* Convert class name to form CapitalizedWords example(MyClassName)\r\n\r\n### Usage\r\n\r\nAdd following line to top of your file\r\n```shell\r\nfrom conventions.conventions import __metaclass__\r\n```\r\n\r\nFor debugging\r\n\r\n```shell\r\nfrom conventions.conventions import __metaclass__\r\n__metaclass__.debug = True\r\n```\r\n\r\n### Example\r\n```shell\r\nfrom conventions.conventions import __metaclass__\r\n__metaclass__.debug = True\r\n\r\n\r\nclass MyCLass_newDefine():\r\n    myVar = 5\r\n    COnsT_DIV = 'ADDD'\r\n    MULTIPLY = 'ssss'\r\n    MyVARIBALE = 'sss'\r\n\r\n    def __init__(self):\r\n        self.mynextvariable = 4\r\n\r\n    def add_this_FUNCTION(self):\r\n        print 'add_this_FUNCTION called'\r\n\r\n    def addNewFunction(self):\r\n        print 'addNewFunction called'\r\n\r\nprint MyCLass_newDefine.__dict__\r\nobj = MyCLass_newDefine()\r\nobj.mynextvariable = 5\r\n#print obj.myvar                     # Gives Error\r\nprint obj.get_my_var()\r\nobj.set_my_var(100)\r\nprint obj.get_my_var()\r\n# Myclass.get_myvar()\r\nobj.add_this_function()\r\n#obj.add_this_FUNCTION()              # Gives error\r\n```\r\n\r\nOutput\r\n```shell\r\n################## Modification Block ###################\r\nclass name changed # MyCLass_newDefine -> MyClassNewDefine\r\nadded getter function # get_my_varibale\r\nadded setter function # set_my_varibale\r\nvar/func name changed # MyVARIBALE -> my_varibale\r\nvar/func name changed # MULTIPLY -> MULTIPLY\r\nvar/func name changed # COnsT_DIV -> CONST_DIV\r\nadded getter function # get_my_var\r\nadded setter function # set_my_var\r\nvar/func name changed # myVar -> my_var\r\nvar/func name changed # add_this_FUNCTION -> add_this_function\r\nvar/func name changed # addNewFunction -> add_new_function\r\n#########################################################\r\n{'get_my_var': <function get_my_var at 0x024FACF0>, '__module__': '__main__', 'get_my_varibale': <function get_my_varibale at 0x024FABF0>, 'my_var': 5, 'add_new_function': <function addNewFunction at 0x024FAB70>, '__doc__': None, '__dict__': <attribute '__dict__' of 'MyClassNewDefine' objects>, '__weakref__': <attribute '__weakref__' of 'MyClassNewDefine' objects>, 'CONST_DIV': 'ADDD', 'set_my_var': <function set_my_var at 0x024FAD30>, 'MULTIPLY': 'ssss', 'add_this_function': <function add_this_FUNCTION at 0x024FAB30>, 'my_varibale': 'sss', 'set_my_varibale': <function set_my_varibale at 0x024FAC30>, '__init__': <function __init__ at 0x024FAAF0>}\r\n5\r\n100\r\nadd_this_FUNCTION called\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}